syntax="proto3";

package calculator;
option go_package="github.com/diegoclair/grpc-go-course/calculator/calculatorpb";

service CalculatorService{
    // Unary
    rpc Sum(SumRequest) returns (SumResponse){}
    
    // ServerStreaming
    rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

    // ClientStreaming
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

    // Bi Directional Streaming
    rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    // error handling
    // this RPC will trhow an exception if the sent number is a negative
    // The error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse) {};
}

message SumRequest {
    int32 first_number = 1;
    int32 second_number = 2;
}

message SumResponse {
    int64 result = 1;
}

message PrimeNumberDecompositionRequest{
    int64 number = 1;
}

message PrimeNumberDecompositionResponse{
    int64 prime_factor = 1;
}

message ComputeAverageRequest{
    int64 number = 1;
}

message ComputeAverageResponse{
    float result = 1;
}

message FindMaximumRequest{
    int64 number = 1;
}

message FindMaximumResponse{
    int64 maximum = 1;
}

message SquareRootRequest{
    int64 number = 1;
}

message SquareRootResponse{
    double number_root = 1;
}